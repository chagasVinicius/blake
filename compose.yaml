volumes:
  minio-data:
  dagster_home:

networks:
  spark:

services:
  minio:
    image: bitnami/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_DEFAULT_BUCKETS: "blake:public"
    volumes:
      - minio-data:/data
    networks:
      - spark

  dagster-dev:
    develop:
      watch:
        - action: sync
          path: .
          target: /blake
    build:
      context: .
      dockerfile: ./containers/dagster/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - dagster_home:/dagster_home
    environment:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_ENDPOINT_URL: http://minio:9000
      DAGSTER_PIPES_BUCKET: blake

    depends_on:
      - minio
    networks:
      - spark

  spark:
    build:
      context: .
      dockerfile: ./containers/spark/Dockerfile
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_USER=spark
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - spark

  spark-worker-1:
    image: bitnami/spark:3.5.1
    container_name: spark-worker-1
    depends_on:
      - spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=2g
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    networks:
      - spark
